spring :
    datasource:
      url: jdbc:mysql://localhost:3306/demodb?useSSL=false
      username: root
      password: root
    jpa:
      properties:
        hibernate:
          dialect: org.hibernate.dialect.MySQL5InnoDBDialect
      hibernate:
        ddl-auto: update
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: ${GOOGLE_APP_ID}
              clientSecret: ${GOOGLE_APP_SECRET}
              redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                  - email
                  - profile
          provider:
                  google:
                    authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
                    token-uri: https://oauth2.googleapis.com/token
                    user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
                    user-name-attribute: sub

debug: true
demo :
    app:
      jwtSecret: $^x#b9WJr?2viqpL*ky*`#$>7NY~>4nEF?Nz:14W{Uk6~Dg;Xs@At)AEaB30uS
      jwtExpirationMs: 86400000
      jwtRefreshExpirationMs: 86400000
      auth:
        tokenSecret: $^x#b9WJr?2viqpL*ky*`#$>7NY~>4nEF?Nz:14W{Uk6~Dg;Xs@At)AEaB30uS
        tokenExpirationMs: 864000000
      oauth2:
          # After successfully authenticating with the OAuth2 Provider,
          # we'll be generating an auth token for the user and sending the token to the
          # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
          # We're not using cookies because they won't work well in mobile clients.
        authorizedRedirectUris:
            - http://localhost:8000/oauth2/redirect
